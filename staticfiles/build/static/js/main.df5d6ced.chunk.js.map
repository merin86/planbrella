{"version":3,"sources":["styles/SignInUpForm.module.css","styles/TaskDetail.module.css","styles/NavBar.module.css","styles/TaskEdit.module.css","styles/Tasks.module.css","styles/TaskCreateForm.module.css","styles/Home.module.css","styles/CommentCreateForm.module.css","styles/Footer.module.css","App.module.css","assets/logo.jpg","api/axiosDefaults.js","utils/utils.js","contexts/CurrentUserContext.js","components/NavBar.js","pages/home/Home.js","pages/auth/SignInForm.js","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/tasks/Tasks.js","pages/tasks/TaskCreateForm.js","pages/comments/CommentCreateForm.js","pages/tasks/TaskDetail.js","pages/tasks/TaskEdit.js","components/Footer.js","hooks/useMenuState.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","removeTokenTimestamp","localStorage","removeItem","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","navigate","useNavigate","useEffect","async","data","get","err","console","log","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","NavBar","onToggle","expanded","setExpanded","handleClose","loggedInIcons","_jsxs","_Fragment","NavLink","className","_ref2","isActive","styles","NavLinkActive","to","onClick","NavText","username","loggedOutIcons","_ref3","_ref4","Navbar","expand","fixed","Container","BrandContainer","Brand","src","logo","alt","height","width","Toggle","handleToggle","Collapse","id","Nav","_ref5","Home","TextBox","Link","SignInForm","_errors$username","_errors$password","_errors$non_field_err","userAuthStatus","useRedirect","signInData","setSignInData","password","errors","setErrors","handleChange","event","target","name","header","formContainer","Form","onSubmit","preventDefault","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","Group","controlId","Label","Control","type","placeholder","onChange","input","map","message","idx","Alert","variant","non_field_errors","Button","submitButton","divider","signUpText","link","SignUpForm","_errors$password2","signUpData","setSignUpData","password1","password2","signInText","Tasks","tasks","setTasks","showModal","setShowModal","taskToDelete","setTaskToDelete","sortedTasks","sort","a","b","Date","due_date","fetchTasks","closeModal","ScrollableContent","HeaderRow","length","task","TaskItem","title","state","FaCheck","is_overdue","concat","OverdueDate","toLocaleDateString","OverdueText","TaskButton","openModal","CreateButton","Modal","show","onHide","Header","closeButton","Title","Body","Footer","delete","filter","error","TaskCreateForm","setTitle","description","setDescription","dueDate","setDueDate","e","currentDate","toISOString","split","newErrors","trim","Object","keys","newTask","FormGroup","htmlFor","required","Input","Textarea","ButtonGroup","CommentCreateForm","taskId","onCommentAdded","text","setText","setError","isMounted","setIsMounted","Error","TaskDetail","useParams","setTask","comments","setComments","hasMore","setHasMore","page","setPage","showDeleteModal","setShowDeleteModal","commentToDelete","setCommentToDelete","editingCommentId","setEditingCommentId","newCommentText","setNewCommentText","editError","setEditError","showTaskDeleteModal","setShowTaskDeleteModal","fetchComments","useCallback","prevComments","results","next","prevPage","fetchTask","closeDeleteModal","closeTaskDeleteModal","cancelEditing","handleCommentUpdate","put","comment","Description","Divider","DueDate","ButtonsContainer","handleEdit","openTaskDeleteModal","CommentsSection","newComment","InfiniteScroll","dataLength","loader","endMessage","style","textAlign","Comment","CommentOwner","owner","CommentText","CommentDate","created_at","CommentButtons","startEditing","openDeleteModal","TaskEdit","setDate","getDate","updatedTask","handleCancel","Paragraph","useMenuState","menuOpen","setMenuOpen","location","useLocation","paddingTop","setPaddingTop","App","classNames","contentShift","isOpen","content","flex","Routes","Route","path","element","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.df5d6ced.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"SignInUpForm_formContainer__bped_\",\"header\":\"SignInUpForm_header__3caXE\",\"form\":\"SignInUpForm_form__1LNfT\",\"input\":\"SignInUpForm_input__38e9W\",\"submitButton\":\"SignInUpForm_submitButton__nL3nF\",\"divider\":\"SignInUpForm_divider__2P-cK\",\"signInText\":\"SignInUpForm_signInText__YNyTv\",\"signUpText\":\"SignInUpForm_signUpText__12IXi\",\"link\":\"SignInUpForm_link__1T7Hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskDetail_Container__1Is53\",\"TextBox\":\"TaskDetail_TextBox__29VOZ\",\"Title\":\"TaskDetail_Title__3jfKY\",\"Description\":\"TaskDetail_Description__1wtug\",\"DueDate\":\"TaskDetail_DueDate__3PlTq\",\"Divider\":\"TaskDetail_Divider__1Zf4H\",\"ButtonsContainer\":\"TaskDetail_ButtonsContainer__1fExW\",\"Button\":\"TaskDetail_Button__2Se-k\",\"CommentsSection\":\"TaskDetail_CommentsSection__1yXec\",\"Comment\":\"TaskDetail_Comment__3HSVx\",\"CommentOwner\":\"TaskDetail_CommentOwner__q-H_l\",\"CommentText\":\"TaskDetail_CommentText__3YQVB\",\"CommentDate\":\"TaskDetail_CommentDate__35FBK\",\"Textarea\":\"TaskDetail_Textarea__12X9y\",\"CommentButtons\":\"TaskDetail_CommentButtons___N_-H\",\"OverdueDate\":\"TaskDetail_OverdueDate__Phetm\",\"OverdueText\":\"TaskDetail_OverdueText__2B2Vc\",\"HeaderRow\":\"TaskDetail_HeaderRow__1hEPU\",\"TaskItem\":\"TaskDetail_TaskItem__2C4I3\",\"TaskButton\":\"TaskDetail_TaskButton__3dX_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"NavLink\":\"NavBar_NavLink__34ons\",\"NavLinkActive\":\"NavBar_NavLinkActive__AdSva\",\"NavText\":\"NavBar_NavText__30Uk8\",\"BrandContainer\":\"NavBar_BrandContainer__5g22E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskEdit_Container__1ECqs\",\"TextBox\":\"TaskEdit_TextBox__2ZdiK\",\"Form\":\"TaskEdit_Form__1SJlJ\",\"FormGroup\":\"TaskEdit_FormGroup__26eeU\",\"Input\":\"TaskEdit_Input__2bbp1\",\"Textarea\":\"TaskEdit_Textarea__1ZYoY\",\"ButtonGroup\":\"TaskEdit_ButtonGroup__39QDJ\",\"Button\":\"TaskEdit_Button__HhhMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Tasks_Container__8DBvF\",\"TextBox\":\"Tasks_TextBox__2t5Qf\",\"ScrollableContent\":\"Tasks_ScrollableContent__FLl0k\",\"HeaderRow\":\"Tasks_HeaderRow__2HXbo\",\"TaskItem\":\"Tasks_TaskItem__1cXCW\",\"CreateButton\":\"Tasks_CreateButton__3d0kI\",\"btn\":\"Tasks_btn__1WBn4\",\"CheckIcon\":\"Tasks_CheckIcon__3QJkD\",\"OverdueDate\":\"Tasks_OverdueDate__3h-Lb\",\"OverdueText\":\"Tasks_OverdueText__3EHuu\",\"TaskButton\":\"Tasks_TaskButton__14ull\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskCreateForm_Container__2DAEF\",\"TextBox\":\"TaskCreateForm_TextBox__36p8E\",\"Form\":\"TaskCreateForm_Form__6hCkF\",\"FormGroup\":\"TaskCreateForm_FormGroup__3r-wu\",\"Input\":\"TaskCreateForm_Input__1uaRw\",\"Textarea\":\"TaskCreateForm_Textarea__3m8q_\",\"ButtonGroup\":\"TaskCreateForm_ButtonGroup__7oEDq\",\"Button\":\"TaskCreateForm_Button__EwMfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Home_Container__1yRpm\",\"TextBox\":\"Home_TextBox__1PPGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentCreateForm\":\"CommentCreateForm_CommentCreateForm__3kg2i\",\"Textarea\":\"CommentCreateForm_Textarea__14rYF\",\"Button\":\"CommentCreateForm_Button__340gK\",\"Error\":\"CommentCreateForm_Error__1AJLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__9Y8xx\",\"Title\":\"Footer_Title__1Dv-1\",\"Paragraph\":\"Footer_Paragraph__fbol8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"content\":\"App_content__3La4L\",\"contentShift\":\"App_contentShift__2vaSI\"};","export default __webpack_public_path__ + \"static/media/logo.5ef7ff6e.jpg\";","import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\"\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();\n","import jwtDecode from \"jwt-decode\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  // eslint-disable-next-line no-empty\n  } catch (err) {}\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem(\"refreshTokenTimestamp\", refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem(\"refreshTokenTimestamp\");\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem(\"refreshTokenTimestamp\");\n};\n","import React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\n// eslint-disable-next-line react/prop-types\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(\"Error fetching user data:\", err);\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                navigate(\"/sign-in\");\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                navigate(\"/sign-in\");\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [navigate]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../assets/logo.jpg\";\nimport styles from \"../styles/NavBar.module.css\";\nimport { useCurrentUser, useSetCurrentUser } from \"../contexts/CurrentUserContext\";\n\n// eslint-disable-next-line react/prop-types\nconst NavBar = ({ onToggle }) => {\n  // State to track if the navbar is expanded\n  const [expanded, setExpanded] = useState(false);\n  // Get the current user from context\n  const currentUser = useCurrentUser();\n  // Function to set the current user in context\n  const setCurrentUser = useSetCurrentUser();\n  // Hook to navigate programmatically\n  const navigate = useNavigate();\n\n  // Toggle the navbar expansion and call the onToggle prop\n  const handleToggle = () => {\n    setExpanded(!expanded);\n    onToggle(!expanded);\n  };\n\n  // Close the navbar and call the onToggle prop\n  const handleClose = () => {\n    setExpanded(false);\n    onToggle(false);\n  };\n\n  // Handle sign out, clear the token, update user context and navigate to home\n  const handleSignOut = async () => {\n    try {\n      await axios.post(\"/dj-rest-auth/logout/\");\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n      handleClose();\n      navigate(\"/\");\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  // Icons to display when user is logged in\n  const loggedInIcons = (\n    <>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/tasks\"\n        onClick={handleClose}\n      >\n        Tasks\n      </NavLink>\n      <span className={styles.NavLink} onClick={handleSignOut}>\n        Sign Out\n      </span>\n      <span className={styles.NavText}>\n        {currentUser?.username}\n      </span>\n    </>\n  );\n\n  // Icons to display when user is logged out\n  const loggedOutIcons = (\n    <>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/sign-in\"\n        onClick={handleClose}\n      >\n        Sign In\n      </NavLink>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/sign-up\"\n        onClick={handleClose}\n      >\n        Sign Up\n      </NavLink>\n    </>\n  );\n\n  return (\n    <Navbar className={styles.NavBar} expand=\"md\" fixed=\"top\" expanded={expanded}>\n      <Container className=\"d-flex justify-content-center\">\n        <NavLink to=\"/\" className={styles.BrandContainer} onClick={handleClose}>\n          <Navbar.Brand>\n            <img src={logo} alt=\"logo\" height=\"80\" width=\"80\" />\n          </Navbar.Brand>\n        </NavLink>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={handleToggle} />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mx-auto text-center\">\n            <NavLink\n              className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n              to=\"/\"\n              onClick={handleClose}\n            >\n              Home\n            </NavLink>\n            {currentUser ? loggedInIcons : loggedOutIcons}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/Home.module.css\";\n\nconst Home = () => {\n  const currentUser = useCurrentUser(); // Get the current user from context\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>\n          {/* Display different headers based on whether the user is logged in or not */}\n          {currentUser\n            ? \"Planbrella, Productivity App\"\n            : \"Welcome to Planbrella\"}\n        </h2>\n        {currentUser ? (\n          <p>\n            {/* Message for logged-in users */}\n            Welcome back, {currentUser.username}!<br />\n            Organize your tasks efficiently and stay on top of your schedule.\n            <br />\n            You can manage your tasks by visiting the{\" \"}\n            <NavLink to=\"/tasks\" className={styles.Link}>\n              Tasks page\n            </NavLink>\n            .\n          </p>\n        ) : (\n          <p>\n            {/* Message for visitors who are not logged in */}\n            Your premier solution for organizing tasks both personally and\n            professionally.\n            <br />\n            If you already have an account, please{\" \"}\n            <NavLink to=\"/sign-in\" className={styles.Link}>\n              sign in here\n            </NavLink>\n            . New users can create an account by{\" \"}\n            <NavLink to=\"/sign-up\" className={styles.Link}>\n              signing up here\n            </NavLink>\n            .\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { setTokenTimestamp } from \"../../utils/utils\";\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect(\"loggedIn\");\n\n  // State to manage form input data\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // Hook to navigate to different routes\n  const navigate = useNavigate();\n\n  // Handle input change\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Send sign in request\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      navigate('/');\n    } catch (err) {\n      // Set errors if any\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.header}>Sign In</h2>\n      <Container className={styles.formContainer}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Label className=\"d-none\">Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.username?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          {errors.non_field_errors?.map((message, idx) => (\n            <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n              {message}\n            </Alert>\n          ))}\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className={styles.submitButton}\n          >\n            Sign In\n          </Button>\n        </Form>\n\n        <div className={styles.divider}>or</div>\n\n        <p className={styles.signUpText}>\n          Don&apos;t have an account?{\" \"}\n          <Link to=\"/sign-up\" className={styles.link}>\n            Sign up here!\n          </Link>\n        </p>\n      </Container>\n    </div>\n  );\n}\n\nexport default SignInForm;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const useRedirect = (userAuthStatus) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        if (userAuthStatus === \"loggedIn\") {\n          navigate(\"/\");\n        }\n      } catch (err) {\n        if (userAuthStatus === \"loggedOut\") {\n          navigate(\"/sign-in\");\n        }\n      }\n    };\n\n    handleMount();\n  }, [navigate, userAuthStatus]);\n};\n","import React, { useState } from 'react';\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../../styles/SignInUpForm.module.css';\n\nfunction SignUpForm() {\n  // State to manage form input data\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // Hook to navigate to different routes\n  const navigate = useNavigate();\n\n  // Handle input change\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Send sign up request\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      navigate('/sign-in');\n    } catch (err) {\n      // Set errors if any\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.header}>Sign Up</h2>\n      <Container className={styles.formContainer}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Label className=\"d-none\">Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.username?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password1\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password1\"\n              value={password1}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password1?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password2\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"password2\"\n              value={password2}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password2?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          {errors.non_field_errors?.map((message, idx) => (\n            <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n              {message}\n            </Alert>\n          ))}\n\n          <Button variant=\"primary\" type=\"submit\" className={styles.submitButton}>\n            Sign Up\n          </Button>\n        </Form>\n\n        <div className={styles.divider}>or</div>\n\n        <p className={styles.signInText}>\n          Already have an account?{' '}\n          <Link to=\"/sign-in\" className={styles.link}>\n            Sign in here!\n          </Link>\n        </p>\n      </Container>\n    </div>\n  );\n}\n\nexport default SignUpForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FaCheck } from 'react-icons/fa';\nimport { Modal, Button } from 'react-bootstrap';\nimport styles from \"../../styles/Tasks.module.css\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]); // State to hold the list of tasks\n  const [showModal, setShowModal] = useState(false); // State to control the visibility of the delete confirmation modal\n  const [taskToDelete, setTaskToDelete] = useState(null); // State to hold the task to be deleted\n\n  useEffect(() => {\n    // Function to fetch tasks from the server\n    const fetchTasks = async () => {\n      try {\n        const { data } = await axiosRes.get(\"/tasks/\");\n        // Sort tasks by due date\n        const sortedTasks = data.sort(\n          (a, b) => new Date(a.due_date) - new Date(b.due_date)\n        );\n        setTasks(sortedTasks); // Update state with sorted tasks\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchTasks(); // Call the fetch function on component mount\n  }, []);\n\n  // Function to handle task deletion\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/tasks/${taskToDelete.id}/`);\n      // Remove the deleted task from the state\n      setTasks(tasks.filter(task => task.id !== taskToDelete.id));\n      setShowModal(false); // Close the delete confirmation modal\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Function to open the delete confirmation modal\n  const openModal = (task) => {\n    setTaskToDelete(task); // Set the task to be deleted\n    setShowModal(true); // Show the delete confirmation modal\n  };\n\n  // Function to close the delete confirmation modal\n  const closeModal = () => {\n    setShowModal(false);\n    setTaskToDelete(null); // Clear the task to be deleted\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <div className={styles.ScrollableContent}>\n          <div className={styles.HeaderRow}>\n            <div>Title</div>\n            <div>Due Date</div>\n            <div>View Task</div>\n            <div>Edit Task</div>\n            <div>Delete Task</div>\n          </div>\n          {tasks.length > 0 ? (\n            tasks.map((task) => (\n              <div key={task.id} className={styles.TaskItem}>\n                <div>\n                  {task.title} {task.state === 'done' && <FaCheck />}\n                </div>\n                <div className={task.is_overdue ? `${styles.OverdueDate}` : ''}>\n                  {new Date(task.due_date).toLocaleDateString()} {task.is_overdue && <span className={styles.OverdueText}>Overdue</span>}\n                </div>\n                <div>\n                  <Link\n                    to={`/tasks/${task.id}`}\n                    className={`btn btn-primary ${styles.TaskButton}`}\n                  >\n                    View\n                  </Link>\n                </div>\n                <div>\n                  <Link\n                    to={`/tasks/${task.id}/edit`}\n                    className={`btn btn-warning ${styles.TaskButton}`}\n                  >\n                    Edit\n                  </Link>\n                </div>\n                <div>\n                  <button\n                    className={`btn btn-danger ${styles.TaskButton}`}\n                    onClick={() => openModal(task)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No tasks available.</p>\n          )}\n        </div>\n        <div className={styles.CreateButton}>\n          <NavLink to=\"/tasks/create\" className=\"btn btn-success\">\n            Create Task\n          </NavLink>\n        </div>\n      </div>\n\n      <Modal show={showModal} onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this task? Removing a task is permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport styles from '../../styles/TaskCreateForm.module.css';\n\nconst TaskCreateForm = () => {\n  // State variables for form inputs and errors\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const currentDate = new Date().toISOString().split('T')[0];\n\n    // Validate form inputs\n    const newErrors = {};\n    if (!title.trim()) newErrors.title = 'Title is required and cannot be blank.';\n    if (!description.trim()) newErrors.description = 'Description is required and cannot be blank.';\n    if (!dueDate || dueDate < currentDate) newErrors.dueDate = 'Due Date must be today or later.';\n\n    // If there are validation errors, set errors state and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      // Create new task object\n      const newTask = {\n        title,\n        description,\n        due_date: new Date(dueDate).toISOString(),\n      };\n      // Send POST request to create new task\n      await axios.post('/tasks/', newTask, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      // Navigate to tasks page after successful creation\n      navigate('/tasks');\n    } catch (err) {\n      console.error('Error creating task:', err.response ? err.response.data : err.message);\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>Create a New Task</h2>\n        <form onSubmit={handleSubmit} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.title && <Alert variant=\"danger\">{errors.title}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && <Alert variant=\"danger\">{errors.description}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"dueDate\">Due Date:</label>\n            <input\n              type=\"date\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.dueDate && <Alert variant=\"danger\">{errors.dueDate}</Alert>}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button type=\"submit\" className={`btn btn-success ${styles.Button}`}>\n              Create Task\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCreateForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"../../styles/CommentCreateForm.module.css\";\n\nconst CommentCreateForm = ({ taskId, onCommentAdded }) => {\n  // State to manage the comment text\n  const [text, setText] = useState(\"\");\n  // State to manage error messages\n  const [error, setError] = useState(null);\n  // State to manage component mount status\n  const [isMounted, setIsMounted] = useState(true);\n\n  // Effect to clean up mount status on unmount\n  useEffect(() => {\n    return () => {\n      setIsMounted(false);\n    };\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) {\n      setError(\"Comment cannot be empty or whitespace.\");\n      return;\n    }\n\n    try {\n      // Send a POST request to create a new comment\n      const { data } = await axios.post(\"/comments/\", { text, task: taskId });\n      if (isMounted) {\n        onCommentAdded(data); // Call the callback function to add the new comment\n        setText(\"\"); // Reset the comment text\n        setError(null); // Clear any existing errors\n      }\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n      if (isMounted) {\n        setError(\"Failed to post comment. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className={styles.CommentCreateForm}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className={styles.Textarea}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Add a comment...\"\n        ></textarea>\n        {error && <div className={styles.Error}>{error}</div>}\n        <button type=\"submit\" className={`btn btn-primary ${styles.Button}`}>\n          Post\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentCreateForm;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport CommentCreateForm from \"../comments/CommentCreateForm\";\nimport styles from \"../../styles/TaskDetail.module.css\";\n\nconst TaskDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [commentToDelete, setCommentToDelete] = useState(null);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [newCommentText, setNewCommentText] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n  const [showTaskDeleteModal, setShowTaskDeleteModal] = useState(false);\n\n  // Fetch comments for the task\n  const fetchComments = useCallback(async () => {\n    try {\n      const { data } = await axios.get(`/comments/?task=${id}&page=${page}`);\n      setComments((prevComments) => [...prevComments, ...data.results]);\n      if (!data.next) {\n        setHasMore(false);\n      }\n      setPage((prevPage) => prevPage + 1);\n    } catch (err) {\n      console.error(\"Error fetching comments:\", err);\n    }\n  }, [id, page]);\n\n  // Fetch task details on component mount\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const { data } = await axios.get(`/tasks/${id}/`);\n        setTask(data);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n\n    fetchTask();\n    fetchComments();\n  }, [id, fetchComments]);\n\n  // Navigate to the task edit page\n  const handleEdit = () => {\n    navigate(`/tasks/${id}/edit`);\n  };\n\n  // Add a new comment to the comments list\n  const handleCommentAdded = (newComment) => {\n    setComments((prevComments) => [newComment, ...prevComments]);\n  };\n\n  // Open the comment delete confirmation modal\n  const openDeleteModal = (comment) => {\n    setCommentToDelete(comment);\n    setShowDeleteModal(true);\n  };\n\n  // Close the comment delete confirmation modal\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n    setCommentToDelete(null);\n  };\n\n  // Handle comment deletion\n  const handleCommentDelete = async () => {\n    if (!commentToDelete) return;\n    try {\n      await axios.delete(`/comments/${commentToDelete.id}/`);\n      setComments((prevComments) =>\n        prevComments.filter((comment) => comment.id !== commentToDelete.id)\n      );\n      closeDeleteModal();\n    } catch (err) {\n      console.error(\"Error deleting comment:\", err);\n    }\n  };\n\n  // Open the task delete confirmation modal\n  const openTaskDeleteModal = () => {\n    setShowTaskDeleteModal(true);\n  };\n\n  // Close the task delete confirmation modal\n  const closeTaskDeleteModal = () => {\n    setShowTaskDeleteModal(false);\n  };\n\n  // Handle task deletion\n  const handleTaskDelete = async () => {\n    try {\n      await axios.delete(`/tasks/${id}/`);\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n    }\n  };\n\n  // Start editing a comment\n  const startEditing = (comment) => {\n    setEditingCommentId(comment.id);\n    setNewCommentText(comment.text);\n    setEditError(\"\");\n  };\n\n  // Cancel editing a comment\n  const cancelEditing = () => {\n    setEditingCommentId(null);\n    setNewCommentText(\"\");\n    setEditError(\"\");\n  };\n\n  // Validate the comment text\n  const validateComment = (text) => {\n    return text.trim().length > 0;\n  };\n\n  // Handle comment update\n  const handleCommentUpdate = async () => {\n    if (!validateComment(newCommentText)) {\n      setEditError(\"Comment cannot be empty or whitespace.\");\n      return;\n    }\n\n    try {\n      await axios.put(`/comments/${editingCommentId}/`, {\n        text: newCommentText,\n      });\n      setComments((prevComments) =>\n        prevComments.map((comment) =>\n          comment.id === editingCommentId\n            ? { ...comment, text: newCommentText }\n            : comment\n        )\n      );\n      cancelEditing();\n    } catch (err) {\n      console.error(\"Error updating comment:\", err);\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <div className={styles.Title}>{task?.title}</div>\n        <div className={styles.Description}>{task?.description}</div>\n        <hr className={styles.Divider} />\n        <div\n          className={\n            task?.is_overdue ? `${styles.OverdueDate}` : styles.DueDate\n          }\n        >\n          Due Date: {new Date(task?.due_date).toLocaleDateString()}\n          {task?.is_overdue && (\n            <span className={styles.OverdueText}>Overdue</span>\n          )}\n        </div>\n        <div className={styles.ButtonsContainer}>\n          <button\n            onClick={handleEdit}\n            className={`btn btn-warning ${styles.Button}`}\n          >\n            Edit\n          </button>\n          <button\n            onClick={openTaskDeleteModal}\n            className={`btn btn-danger ${styles.Button}`}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      <div className={styles.CommentsSection}>\n        <CommentCreateForm taskId={id} onCommentAdded={handleCommentAdded} />\n        <InfiniteScroll\n          dataLength={comments.length}\n          next={fetchComments}\n          hasMore={hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>No more comments</b>\n            </p>\n          }\n        >\n          {comments.map((comment) => (\n            <div key={comment.id} className={styles.Comment}>\n              <div className={styles.CommentOwner}>{comment.owner}</div>\n              {editingCommentId === comment.id ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    value={newCommentText}\n                    onChange={(e) => setNewCommentText(e.target.value)}\n                    className=\"form-control\"\n                  />\n                  {editError && <div className=\"text-danger\">{editError}</div>}\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={handleCommentUpdate}\n                  >\n                    Save\n                  </button>\n                  <button className=\"btn btn-secondary\" onClick={cancelEditing}>\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <div className={styles.CommentText}>{comment.text}</div>\n                  <div className={styles.CommentDate}>\n                    {new Date(comment.created_at).toLocaleDateString()}\n                  </div>\n                  <div className={styles.CommentButtons}>\n                    <button\n                      className=\"btn btn-warning\"\n                      onClick={() => startEditing(comment)}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => openDeleteModal(comment)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </InfiniteScroll>\n      </div>\n\n      <Modal show={showDeleteModal} onHide={closeDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this comment? Removing a comment is\n          permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDeleteModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleCommentDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showTaskDeleteModal} onHide={closeTaskDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this task? Removing a task is\n          permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeTaskDeleteModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleTaskDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskDetail;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/TaskEdit.module.css\";\n\nconst TaskEdit = () => {\n  const { id } = useParams(); // Retrieve task ID from URL parameters\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Fetch task details on component mount\n    const fetchTask = async () => {\n      try {\n        const { data } = await axios.get(`/tasks/${id}/`);\n        setTitle(data.title);\n        setDescription(data.description);\n\n        // Adjust due date by adding one day for proper display\n        const dueDate = new Date(data.due_date);\n        dueDate.setDate(dueDate.getDate() + 1);\n        setDueDate(dueDate.toISOString().split(\"T\")[0]);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n\n    fetchTask();\n  }, [id]);\n\n  // Handle cancel button click\n  const handleCancel = () => {\n    navigate(\"/tasks\");\n  };\n\n  // Handle save button click\n  const handleSave = async (e) => {\n    e.preventDefault();\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n\n    // Validate form fields\n    const newErrors = {};\n    if (!title.trim())\n      newErrors.title = \"Title is required and cannot be blank.\";\n    if (!description.trim())\n      newErrors.description = \"Description is required and cannot be blank.\";\n    if (!dueDate || dueDate < currentDate)\n      newErrors.dueDate = \"Due Date must be today or later.\";\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      const updatedTask = {\n        title,\n        description,\n        due_date: new Date(dueDate).toISOString(),\n      };\n      // Send updated task data to the server\n      await axios.put(`/tasks/${id}/`, updatedTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\n        \"Error updating task:\",\n        err.response ? err.response.data : err.message\n      );\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>Edit Task</h2>\n        <form onSubmit={handleSave} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.title && <Alert variant=\"danger\">{errors.title}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && (\n              <Alert variant=\"danger\">{errors.description}</Alert>\n            )}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"dueDate\">Due Date:</label>\n            <input\n              type=\"date\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.dueDate && <Alert variant=\"danger\">{errors.dueDate}</Alert>}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button\n              type=\"submit\"\n              className={`btn btn-success ${styles.Button}`}\n            >\n              Save\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className={`btn btn-danger ${styles.Button}`}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskEdit;\n","import React from \"react\";\nimport styles from \"../styles/Footer.module.css\";\n\n// Footer component definition\nconst Footer = () => {\n  return (\n    <footer className={styles.Footer}>\n      <h3 className={styles.Title}>Contact Planbrella &copy;</h3>\n      <p className={styles.Paragraph}>Phone Number: 08-123 45 67</p>\n      <p className={styles.Paragraph}>E-mail: admin@planbrella.com</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst useMenuState = () => {\n  // State to manage the menu open/close state\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // Hook to get the current location object\n  const location = useLocation();\n\n  // Hook to get the current user from the context\n  const currentUser = useCurrentUser();\n\n  // State to manage the padding top based on menu and user state\n  const [paddingTop, setPaddingTop] = useState(\"120px\");\n\n  // Effect to close the menu whenever the location changes\n  useEffect(() => {\n    setMenuOpen(false);\n  }, [location]);\n\n  // Effect to adjust the padding top based on the menu state and user state\n  useEffect(() => {\n    if (currentUser) {\n      setPaddingTop(menuOpen ? \"180px\" : \"120px\");\n    } else {\n      setPaddingTop(menuOpen ? \"140px\" : \"120px\");\n    }\n  }, [currentUser, menuOpen]);\n\n  // Return the state and function to manage the menu and padding top\n  return { menuOpen, setMenuOpen, paddingTop };\n};\n\nexport default useMenuState;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./pages/home/Home\";\nimport SignInForm from \"./pages/auth/SignInForm\";\nimport SignUpForm from \"./pages/auth/SignUpForm\";\nimport Tasks from \"./pages/tasks/Tasks\";\nimport TaskCreateForm from \"./pages/tasks/TaskCreateForm\";\nimport TaskDetail from \"./pages/tasks/TaskDetail\";\nimport TaskEdit from \"./pages/tasks/TaskEdit\";\nimport Footer from \"./components/Footer\";\nimport styles from \"./App.module.css\";\nimport useMenuState from \"./hooks/useMenuState\";\nimport \"./api/axiosDefaults\";\n\nfunction App() {\n  const { menuOpen, setMenuOpen, paddingTop } = useMenuState(); // Custom hook to manage menu state\n\n  return (\n    <div\n      className={classNames(styles.App, { [styles.contentShift]: menuOpen })}\n    >\n      <NavBar onToggle={(isOpen) => setMenuOpen(isOpen)} /> {/* Navbar component with toggle handler */}\n      <div className={styles.content} style={{ paddingTop, flex: 1 }}> {/* Main content area with dynamic padding */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} /> {/* Home page route */}\n          <Route path=\"/sign-in\" element={<SignInForm />} /> {/* Sign-in form route */}\n          <Route path=\"/sign-up\" element={<SignUpForm />} /> {/* Sign-up form route */}\n          <Route path=\"/tasks\" element={<Tasks />} /> {/* Tasks list route */}\n          <Route path=\"/tasks/create\" element={<TaskCreateForm />} /> {/* Task creation form route */}\n          <Route path=\"/tasks/:id\" element={<TaskDetail />} /> {/* Task detail view route */}\n          <Route path=\"/tasks/:id/edit\" element={<TaskEdit />} /> {/* Task edit form route */}\n          <Route path=\"*\" element={<p>Page not found!</p>} /> {/* Fallback route for undefined paths */}\n        </Routes>\n      </div>\n      <Footer /> {/* Footer component */}\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CurrentUserProvider } from \"./contexts/CurrentUserContext\";\n\n\nReactDOM.render(\n  <Router>\n        <CurrentUserProvider>\n          <App />\n      </CurrentUserProvider>\n    </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
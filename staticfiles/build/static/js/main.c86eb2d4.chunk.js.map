{"version":3,"sources":["styles/SignInUpForm.module.css","styles/TaskDetail.module.css","styles/NavBar.module.css","styles/TaskEdit.module.css","styles/GroupEdit.module.css","styles/Tasks.module.css","styles/TaskCreateForm.module.css","styles/GroupCreateForm.module.css","styles/GroupList.module.css","styles/GroupDetail.module.css","styles/Home.module.css","styles/CommentCreateForm.module.css","styles/Footer.module.css","App.module.css","assets/logo.jpg","api/axiosDefaults.js","utils/utils.js","contexts/CurrentUserContext.js","components/NavBar.js","pages/home/Home.js","pages/auth/SignInForm.js","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/tasks/Tasks.js","pages/tasks/TaskCreateForm.js","pages/comments/CommentCreateForm.js","pages/tasks/TaskDetail.js","pages/tasks/TaskEdit.js","pages/groups/GroupList.js","pages/groups/GroupCreateForm.js","pages/groups/GroupDetail.js","pages/groups/GroupEdit.js","components/Footer.js","hooks/useMenuState.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","removeTokenTimestamp","localStorage","removeItem","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","navigate","useNavigate","useEffect","async","data","get","err","console","log","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","NavBar","onToggle","expanded","setExpanded","handleClose","loggedInIcons","_jsxs","_Fragment","NavLink","className","_ref2","isActive","styles","NavLinkActive","to","onClick","_ref3","NavText","username","loggedOutIcons","_ref4","_ref5","Navbar","expand","fixed","Container","BrandContainer","Brand","src","logo","alt","height","width","Toggle","handleToggle","Collapse","id","Nav","_ref6","Home","TextBox","Link","SignInForm","_errors$username","_errors$password","_errors$non_field_err","userAuthStatus","useRedirect","signInData","setSignInData","password","errors","setErrors","handleChange","event","target","name","header","formContainer","Form","onSubmit","preventDefault","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","Group","controlId","Label","Control","type","placeholder","onChange","input","map","message","idx","Alert","variant","non_field_errors","Button","submitButton","divider","signUpText","link","SignUpForm","_errors$password2","signUpData","setSignUpData","password1","password2","signInText","Tasks","tasks","setTasks","showModal","setShowModal","taskToDelete","setTaskToDelete","sortedTasks","sort","a","b","Date","due_date","fetchTasks","closeModal","ScrollableContent","HeaderRow","length","task","TaskItem","title","state","FaCheck","is_overdue","concat","OverdueDate","toLocaleDateString","OverdueText","TaskButton","openModal","CreateButton","Modal","show","onHide","Header","closeButton","Title","Body","Footer","delete","filter","error","TaskCreateForm","setTitle","description","setDescription","dueDate","setDueDate","e","currentDate","toISOString","split","newErrors","trim","Object","keys","newTask","FormGroup","htmlFor","required","Input","Textarea","ButtonGroup","CommentCreateForm","taskId","onCommentAdded","text","setText","setError","isMounted","setIsMounted","Error","TaskDetail","useParams","setTask","comments","setComments","hasMore","setHasMore","page","setPage","showDeleteModal","setShowDeleteModal","commentToDelete","setCommentToDelete","editingCommentId","setEditingCommentId","newCommentText","setNewCommentText","editError","setEditError","showTaskDeleteModal","setShowTaskDeleteModal","fetchComments","useCallback","prevComments","results","next","prevPage","fetchTask","closeDeleteModal","closeTaskDeleteModal","cancelEditing","handleCommentUpdate","put","comment","Description","Divider","DueDate","ButtonsContainer","handleEdit","openTaskDeleteModal","CommentsSection","newComment","InfiniteScroll","dataLength","loader","endMessage","style","textAlign","Comment","CommentOwner","owner","CommentText","CommentDate","created_at","CommentButtons","startEditing","openDeleteModal","TaskEdit","setDate","getDate","updatedTask","handleCancel","GroupList","groups","setGroups","groupToDelete","setGroupToDelete","groupsWithTasks","all","taskRes","group","taskTitle","fetchGroups","GroupItem","group_size","GroupButton","GroupCreateForm","groupSize","setGroupSize","isNaN","newGroup","GroupDetail","setGroup","setTaskTitle","fetchGroup","TaskTitle","GroupSize","GroupEdit","updatedGroup","Paragraph","useMenuState","menuOpen","setMenuOpen","location","useLocation","paddingTop","setPaddingTop","App","classNames","contentShift","isOpen","content","flex","Routes","Route","path","element","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.c86eb2d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"SignInUpForm_formContainer__bped_\",\"header\":\"SignInUpForm_header__3caXE\",\"form\":\"SignInUpForm_form__1LNfT\",\"input\":\"SignInUpForm_input__38e9W\",\"submitButton\":\"SignInUpForm_submitButton__nL3nF\",\"divider\":\"SignInUpForm_divider__2P-cK\",\"signInText\":\"SignInUpForm_signInText__YNyTv\",\"signUpText\":\"SignInUpForm_signUpText__12IXi\",\"link\":\"SignInUpForm_link__1T7Hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskDetail_Container__1Is53\",\"TextBox\":\"TaskDetail_TextBox__29VOZ\",\"Title\":\"TaskDetail_Title__3jfKY\",\"Description\":\"TaskDetail_Description__1wtug\",\"DueDate\":\"TaskDetail_DueDate__3PlTq\",\"Divider\":\"TaskDetail_Divider__1Zf4H\",\"ButtonsContainer\":\"TaskDetail_ButtonsContainer__1fExW\",\"Button\":\"TaskDetail_Button__2Se-k\",\"CommentsSection\":\"TaskDetail_CommentsSection__1yXec\",\"Comment\":\"TaskDetail_Comment__3HSVx\",\"CommentOwner\":\"TaskDetail_CommentOwner__q-H_l\",\"CommentText\":\"TaskDetail_CommentText__3YQVB\",\"CommentDate\":\"TaskDetail_CommentDate__35FBK\",\"Textarea\":\"TaskDetail_Textarea__12X9y\",\"CommentButtons\":\"TaskDetail_CommentButtons___N_-H\",\"OverdueDate\":\"TaskDetail_OverdueDate__Phetm\",\"OverdueText\":\"TaskDetail_OverdueText__2B2Vc\",\"HeaderRow\":\"TaskDetail_HeaderRow__1hEPU\",\"TaskItem\":\"TaskDetail_TaskItem__2C4I3\",\"TaskButton\":\"TaskDetail_TaskButton__3dX_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"NavLink\":\"NavBar_NavLink__34ons\",\"NavLinkActive\":\"NavBar_NavLinkActive__AdSva\",\"NavText\":\"NavBar_NavText__30Uk8\",\"BrandContainer\":\"NavBar_BrandContainer__5g22E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskEdit_Container__1ECqs\",\"TextBox\":\"TaskEdit_TextBox__2ZdiK\",\"Form\":\"TaskEdit_Form__1SJlJ\",\"FormGroup\":\"TaskEdit_FormGroup__26eeU\",\"Input\":\"TaskEdit_Input__2bbp1\",\"Textarea\":\"TaskEdit_Textarea__1ZYoY\",\"ButtonGroup\":\"TaskEdit_ButtonGroup__39QDJ\",\"Button\":\"TaskEdit_Button__HhhMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GroupEdit_Container__2XMnU\",\"TextBox\":\"GroupEdit_TextBox__3YdG9\",\"Form\":\"GroupEdit_Form__2ft1H\",\"FormGroup\":\"GroupEdit_FormGroup__rixL3\",\"Input\":\"GroupEdit_Input__3rsNX\",\"Textarea\":\"GroupEdit_Textarea__2QCfP\",\"ButtonGroup\":\"GroupEdit_ButtonGroup__3Hj9A\",\"Button\":\"GroupEdit_Button__3oDFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Tasks_Container__8DBvF\",\"TextBox\":\"Tasks_TextBox__2t5Qf\",\"ScrollableContent\":\"Tasks_ScrollableContent__FLl0k\",\"HeaderRow\":\"Tasks_HeaderRow__2HXbo\",\"TaskItem\":\"Tasks_TaskItem__1cXCW\",\"CreateButton\":\"Tasks_CreateButton__3d0kI\",\"btn\":\"Tasks_btn__1WBn4\",\"CheckIcon\":\"Tasks_CheckIcon__3QJkD\",\"OverdueDate\":\"Tasks_OverdueDate__3h-Lb\",\"OverdueText\":\"Tasks_OverdueText__3EHuu\",\"TaskButton\":\"Tasks_TaskButton__14ull\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskCreateForm_Container__2DAEF\",\"TextBox\":\"TaskCreateForm_TextBox__36p8E\",\"Form\":\"TaskCreateForm_Form__6hCkF\",\"FormGroup\":\"TaskCreateForm_FormGroup__3r-wu\",\"Input\":\"TaskCreateForm_Input__1uaRw\",\"Textarea\":\"TaskCreateForm_Textarea__3m8q_\",\"ButtonGroup\":\"TaskCreateForm_ButtonGroup__7oEDq\",\"Button\":\"TaskCreateForm_Button__EwMfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GroupCreateForm_Container___ItCQ\",\"TextBox\":\"GroupCreateForm_TextBox__2786U\",\"Form\":\"GroupCreateForm_Form__1aeB6\",\"FormGroup\":\"GroupCreateForm_FormGroup__2JRH0\",\"Input\":\"GroupCreateForm_Input__1PpP6\",\"Textarea\":\"GroupCreateForm_Textarea__3UJu5\",\"ButtonGroup\":\"GroupCreateForm_ButtonGroup__2OVSL\",\"Button\":\"GroupCreateForm_Button__2IeKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GroupList_Container__c7lwP\",\"TextBox\":\"GroupList_TextBox__1xmpu\",\"ScrollableContent\":\"GroupList_ScrollableContent__1M-fI\",\"HeaderRow\":\"GroupList_HeaderRow__dPJwT\",\"GroupItem\":\"GroupList_GroupItem__Puqpz\",\"CreateButton\":\"GroupList_CreateButton__3mZ5N\",\"btn\":\"GroupList_btn__2ZmL9\",\"GroupButton\":\"GroupList_GroupButton__pzgHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GroupDetail_Container__3daGk\",\"TextBox\":\"GroupDetail_TextBox__2fLIu\",\"Description\":\"GroupDetail_Description__1GC_u\",\"GroupSize\":\"GroupDetail_GroupSize__-PEgz\",\"TaskLink\":\"GroupDetail_TaskLink__2urED\",\"Divider\":\"GroupDetail_Divider__3-Mwd\",\"ButtonsContainer\":\"GroupDetail_ButtonsContainer__2j5Nx\",\"Button\":\"GroupDetail_Button__1C2zG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Home_Container__1yRpm\",\"TextBox\":\"Home_TextBox__1PPGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentCreateForm\":\"CommentCreateForm_CommentCreateForm__3kg2i\",\"Textarea\":\"CommentCreateForm_Textarea__14rYF\",\"Button\":\"CommentCreateForm_Button__340gK\",\"Error\":\"CommentCreateForm_Error__1AJLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__9Y8xx\",\"Title\":\"Footer_Title__1Dv-1\",\"Paragraph\":\"Footer_Paragraph__fbol8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"content\":\"App_content__3La4L\",\"contentShift\":\"App_contentShift__2vaSI\"};","export default __webpack_public_path__ + \"static/media/logo.5ef7ff6e.jpg\";","import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\"\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();\n","import jwtDecode from \"jwt-decode\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  // eslint-disable-next-line no-empty\n  } catch (err) {}\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem(\"refreshTokenTimestamp\", refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem(\"refreshTokenTimestamp\");\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem(\"refreshTokenTimestamp\");\n};\n","import React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\n// eslint-disable-next-line react/prop-types\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(\"Error fetching user data:\", err);\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                navigate(\"/sign-in\");\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                navigate(\"/sign-in\");\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [navigate]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../assets/logo.jpg\";\nimport styles from \"../styles/NavBar.module.css\";\nimport { useCurrentUser, useSetCurrentUser } from \"../contexts/CurrentUserContext\";\n\n// eslint-disable-next-line react/prop-types\nconst NavBar = ({ onToggle }) => {\n  // State to track if the navbar is expanded\n  const [expanded, setExpanded] = useState(false);\n  // Get the current user from context\n  const currentUser = useCurrentUser();\n  // Function to set the current user in context\n  const setCurrentUser = useSetCurrentUser();\n  // Hook to navigate programmatically\n  const navigate = useNavigate();\n\n  // Toggle the navbar expansion and call the onToggle prop\n  const handleToggle = () => {\n    setExpanded(!expanded);\n    onToggle(!expanded);\n  };\n\n  // Close the navbar and call the onToggle prop\n  const handleClose = () => {\n    setExpanded(false);\n    onToggle(false);\n  };\n\n  // Handle sign out, clear the token, update user context and navigate to home\n  const handleSignOut = async () => {\n    try {\n      await axios.post(\"/dj-rest-auth/logout/\");\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n      handleClose();\n      navigate(\"/\");\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  // Icons to display when user is logged in\n  const loggedInIcons = (\n    <>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/tasks\"\n        onClick={handleClose}\n      >\n        Tasks\n      </NavLink>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/groups\"\n        onClick={handleClose}\n      >\n        Groups\n      </NavLink>\n      <span className={styles.NavLink} onClick={handleSignOut}>\n        Sign Out\n      </span>\n      <span className={styles.NavText}>\n        {currentUser?.username}\n      </span>\n    </>\n  );\n\n  // Icons to display when user is logged out\n  const loggedOutIcons = (\n    <>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/sign-in\"\n        onClick={handleClose}\n      >\n        Sign In\n      </NavLink>\n      <NavLink\n        className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n        to=\"/sign-up\"\n        onClick={handleClose}\n      >\n        Sign Up\n      </NavLink>\n    </>\n  );\n\n  return (\n    <Navbar className={styles.NavBar} expand=\"md\" fixed=\"top\" expanded={expanded}>\n      <Container className=\"d-flex justify-content-center\">\n        <NavLink to=\"/\" className={styles.BrandContainer} onClick={handleClose}>\n          <Navbar.Brand>\n            <img src={logo} alt=\"logo\" height=\"80\" width=\"80\" />\n          </Navbar.Brand>\n        </NavLink>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={handleToggle} />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mx-auto text-center\">\n            <NavLink\n              className={({ isActive }) => isActive ? styles.NavLinkActive : styles.NavLink}\n              to=\"/\"\n              onClick={handleClose}\n            >\n              Home\n            </NavLink>\n            {currentUser ? loggedInIcons : loggedOutIcons}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/Home.module.css\";\n\nconst Home = () => {\n  const currentUser = useCurrentUser(); // Get the current user from context\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>\n          {/* Display different headers based on whether the user is logged in or not */}\n          {currentUser\n            ? \"Planbrella, Productivity App\"\n            : \"Welcome to Planbrella\"}\n        </h2>\n        {currentUser ? (\n          <p>\n            {/* Message for logged-in users */}\n            Welcome back, {currentUser.username}!<br />\n            Organize your tasks efficiently and stay on top of your schedule.\n            <br />\n            You can manage your tasks by visiting the{\" \"}\n            <NavLink to=\"/tasks\" className={styles.Link}>\n              Tasks page\n            </NavLink>\n            .\n            <br />\n            You can also manage your groups by visiting the{\" \"}\n            <NavLink to=\"/groups\" className={styles.Link}>\n              Groups page\n            </NavLink>\n            .\n          </p>\n        ) : (\n          <p>\n            {/* Message for visitors who are not logged in */}\n            Your premier solution for organizing tasks both personally and\n            professionally.\n            <br />\n            If you already have an account, please{\" \"}\n            <NavLink to=\"/sign-in\" className={styles.Link}>\n              sign in here\n            </NavLink>\n            . New users can create an account by{\" \"}\n            <NavLink to=\"/sign-up\" className={styles.Link}>\n              signing up here\n            </NavLink>\n            .\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { setTokenTimestamp } from \"../../utils/utils\";\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect(\"loggedIn\");\n\n  // State to manage form input data\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // Hook to navigate to different routes\n  const navigate = useNavigate();\n\n  // Handle input change\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Send sign in request\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      navigate('/');\n    } catch (err) {\n      // Set errors if any\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.header}>Sign In</h2>\n      <Container className={styles.formContainer}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Label className=\"d-none\">Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.username?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          {errors.non_field_errors?.map((message, idx) => (\n            <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n              {message}\n            </Alert>\n          ))}\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className={styles.submitButton}\n          >\n            Sign In\n          </Button>\n        </Form>\n\n        <div className={styles.divider}>or</div>\n\n        <p className={styles.signUpText}>\n          Don&apos;t have an account?{\" \"}\n          <Link to=\"/sign-up\" className={styles.link}>\n            Sign up here!\n          </Link>\n        </p>\n      </Container>\n    </div>\n  );\n}\n\nexport default SignInForm;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const useRedirect = (userAuthStatus) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        if (userAuthStatus === \"loggedIn\") {\n          navigate(\"/\");\n        }\n      } catch (err) {\n        if (userAuthStatus === \"loggedOut\") {\n          navigate(\"/sign-in\");\n        }\n      }\n    };\n\n    handleMount();\n  }, [navigate, userAuthStatus]);\n};\n","import React, { useState } from 'react';\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../../styles/SignInUpForm.module.css';\n\nfunction SignUpForm() {\n  // State to manage form input data\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // Hook to navigate to different routes\n  const navigate = useNavigate();\n\n  // Handle input change\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Send sign up request\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      navigate('/sign-in');\n    } catch (err) {\n      // Set errors if any\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.header}>Sign Up</h2>\n      <Container className={styles.formContainer}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Label className=\"d-none\">Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.username?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password1\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password1\"\n              value={password1}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password1?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          <Form.Group controlId=\"password2\" className=\"mt-3\">\n            <Form.Label className=\"d-none\">Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"password2\"\n              value={password2}\n              onChange={handleChange}\n              className={styles.input}\n            />\n          </Form.Group>\n          {errors.password2?.map((message, idx) => (\n            <Alert variant=\"warning\" key={idx}>\n              {message}\n            </Alert>\n          ))}\n\n          {errors.non_field_errors?.map((message, idx) => (\n            <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n              {message}\n            </Alert>\n          ))}\n\n          <Button variant=\"primary\" type=\"submit\" className={styles.submitButton}>\n            Sign Up\n          </Button>\n        </Form>\n\n        <div className={styles.divider}>or</div>\n\n        <p className={styles.signInText}>\n          Already have an account?{' '}\n          <Link to=\"/sign-in\" className={styles.link}>\n            Sign in here!\n          </Link>\n        </p>\n      </Container>\n    </div>\n  );\n}\n\nexport default SignUpForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FaCheck } from 'react-icons/fa';\nimport { Modal, Button } from 'react-bootstrap';\nimport styles from \"../../styles/Tasks.module.css\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]); // State to hold the list of tasks\n  const [showModal, setShowModal] = useState(false); // State to control the visibility of the delete confirmation modal\n  const [taskToDelete, setTaskToDelete] = useState(null); // State to hold the task to be deleted\n\n  useEffect(() => {\n    // Function to fetch tasks from the server\n    const fetchTasks = async () => {\n      try {\n        const { data } = await axiosRes.get(\"/tasks/\");\n        // Sort tasks by due date\n        const sortedTasks = data.sort(\n          (a, b) => new Date(a.due_date) - new Date(b.due_date)\n        );\n        setTasks(sortedTasks); // Update state with sorted tasks\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchTasks(); // Call the fetch function on component mount\n  }, []);\n\n  // Function to handle task deletion\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/tasks/${taskToDelete.id}/`);\n      // Remove the deleted task from the state\n      setTasks(tasks.filter(task => task.id !== taskToDelete.id));\n      setShowModal(false); // Close the delete confirmation modal\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Function to open the delete confirmation modal\n  const openModal = (task) => {\n    setTaskToDelete(task); // Set the task to be deleted\n    setShowModal(true); // Show the delete confirmation modal\n  };\n\n  // Function to close the delete confirmation modal\n  const closeModal = () => {\n    setShowModal(false);\n    setTaskToDelete(null); // Clear the task to be deleted\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <div className={styles.ScrollableContent}>\n          <div className={styles.HeaderRow}>\n            <div>Title</div>\n            <div>Due Date</div>\n            <div>View Task</div>\n            <div>Edit Task</div>\n            <div>Delete Task</div>\n          </div>\n          {tasks.length > 0 ? (\n            tasks.map((task) => (\n              <div key={task.id} className={styles.TaskItem}>\n                <div>\n                  {task.title} {task.state === 'done' && <FaCheck />}\n                </div>\n                <div className={task.is_overdue ? `${styles.OverdueDate}` : ''}>\n                  {new Date(task.due_date).toLocaleDateString()} {task.is_overdue && <span className={styles.OverdueText}>Overdue</span>}\n                </div>\n                <div>\n                  <Link\n                    to={`/tasks/${task.id}`}\n                    className={`btn btn-primary ${styles.TaskButton}`}\n                  >\n                    View\n                  </Link>\n                </div>\n                <div>\n                  <Link\n                    to={`/tasks/${task.id}/edit`}\n                    className={`btn btn-warning ${styles.TaskButton}`}\n                  >\n                    Edit\n                  </Link>\n                </div>\n                <div>\n                  <button\n                    className={`btn btn-danger ${styles.TaskButton}`}\n                    onClick={() => openModal(task)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No tasks available.</p>\n          )}\n        </div>\n        <div className={styles.CreateButton}>\n          <NavLink to=\"/tasks/create\" className=\"btn btn-success\">\n            Create Task\n          </NavLink>\n        </div>\n      </div>\n\n      <Modal show={showModal} onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this task? Removing a task is permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport styles from '../../styles/TaskCreateForm.module.css';\n\nconst TaskCreateForm = () => {\n  // State variables for form inputs and errors\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const currentDate = new Date().toISOString().split('T')[0];\n\n    // Validate form inputs\n    const newErrors = {};\n    if (!title.trim()) newErrors.title = 'Title is required and cannot be blank.';\n    if (!description.trim()) newErrors.description = 'Description is required and cannot be blank.';\n    if (!dueDate || dueDate < currentDate) newErrors.dueDate = 'Due Date must be today or later.';\n\n    // If there are validation errors, set errors state and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      // Create new task object\n      const newTask = {\n        title,\n        description,\n        due_date: new Date(dueDate).toISOString(),\n      };\n      // Send POST request to create new task\n      await axios.post('/tasks/', newTask, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      // Navigate to tasks page after successful creation\n      navigate('/tasks');\n    } catch (err) {\n      console.error('Error creating task:', err.response ? err.response.data : err.message);\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>Create a New Task</h2>\n        <form onSubmit={handleSubmit} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.title && <Alert variant=\"danger\">{errors.title}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && <Alert variant=\"danger\">{errors.description}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"dueDate\">Due Date:</label>\n            <input\n              type=\"date\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.dueDate && <Alert variant=\"danger\">{errors.dueDate}</Alert>}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button type=\"submit\" className={`btn btn-success ${styles.Button}`}>\n              Create Task\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCreateForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"../../styles/CommentCreateForm.module.css\";\n\nconst CommentCreateForm = ({ taskId, onCommentAdded }) => {\n  // State to manage the comment text\n  const [text, setText] = useState(\"\");\n  // State to manage error messages\n  const [error, setError] = useState(null);\n  // State to manage component mount status\n  const [isMounted, setIsMounted] = useState(true);\n\n  // Effect to clean up mount status on unmount\n  useEffect(() => {\n    return () => {\n      setIsMounted(false);\n    };\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) {\n      setError(\"Comment cannot be empty or whitespace.\");\n      return;\n    }\n\n    try {\n      // Send a POST request to create a new comment\n      const { data } = await axios.post(\"/comments/\", { text, task: taskId });\n      if (isMounted) {\n        onCommentAdded(data); // Call the callback function to add the new comment\n        setText(\"\"); // Reset the comment text\n        setError(null); // Clear any existing errors\n      }\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n      if (isMounted) {\n        setError(\"Failed to post comment. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className={styles.CommentCreateForm}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className={styles.Textarea}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Add a comment...\"\n        ></textarea>\n        {error && <div className={styles.Error}>{error}</div>}\n        <button type=\"submit\" className={`btn btn-primary ${styles.Button}`}>\n          Post\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentCreateForm;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport CommentCreateForm from \"../comments/CommentCreateForm\";\nimport styles from \"../../styles/TaskDetail.module.css\";\n\nconst TaskDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [commentToDelete, setCommentToDelete] = useState(null);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [newCommentText, setNewCommentText] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n  const [showTaskDeleteModal, setShowTaskDeleteModal] = useState(false);\n\n  // Fetch comments for the task\n  const fetchComments = useCallback(async () => {\n    try {\n      const { data } = await axios.get(`/comments/?task=${id}&page=${page}`);\n      setComments((prevComments) => [...prevComments, ...data.results]);\n      if (!data.next) {\n        setHasMore(false);\n      }\n      setPage((prevPage) => prevPage + 1);\n    } catch (err) {\n      console.error(\"Error fetching comments:\", err);\n    }\n  }, [id, page]);\n\n  // Fetch task details on component mount\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const { data } = await axios.get(`/tasks/${id}/`);\n        setTask(data);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n\n    fetchTask();\n    fetchComments();\n  }, [id, fetchComments]);\n\n  // Navigate to the task edit page\n  const handleEdit = () => {\n    navigate(`/tasks/${id}/edit`);\n  };\n\n  // Add a new comment to the comments list\n  const handleCommentAdded = (newComment) => {\n    setComments((prevComments) => [newComment, ...prevComments]);\n  };\n\n  // Open the comment delete confirmation modal\n  const openDeleteModal = (comment) => {\n    setCommentToDelete(comment);\n    setShowDeleteModal(true);\n  };\n\n  // Close the comment delete confirmation modal\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n    setCommentToDelete(null);\n  };\n\n  // Handle comment deletion\n  const handleCommentDelete = async () => {\n    if (!commentToDelete) return;\n    try {\n      await axios.delete(`/comments/${commentToDelete.id}/`);\n      setComments((prevComments) =>\n        prevComments.filter((comment) => comment.id !== commentToDelete.id)\n      );\n      closeDeleteModal();\n    } catch (err) {\n      console.error(\"Error deleting comment:\", err);\n    }\n  };\n\n  // Open the task delete confirmation modal\n  const openTaskDeleteModal = () => {\n    setShowTaskDeleteModal(true);\n  };\n\n  // Close the task delete confirmation modal\n  const closeTaskDeleteModal = () => {\n    setShowTaskDeleteModal(false);\n  };\n\n  // Handle task deletion\n  const handleTaskDelete = async () => {\n    try {\n      await axios.delete(`/tasks/${id}/`);\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n    }\n  };\n\n  // Start editing a comment\n  const startEditing = (comment) => {\n    setEditingCommentId(comment.id);\n    setNewCommentText(comment.text);\n    setEditError(\"\");\n  };\n\n  // Cancel editing a comment\n  const cancelEditing = () => {\n    setEditingCommentId(null);\n    setNewCommentText(\"\");\n    setEditError(\"\");\n  };\n\n  // Validate the comment text\n  const validateComment = (text) => {\n    return text.trim().length > 0;\n  };\n\n  // Handle comment update\n  const handleCommentUpdate = async () => {\n    if (!validateComment(newCommentText)) {\n      setEditError(\"Comment cannot be empty or whitespace.\");\n      return;\n    }\n\n    try {\n      await axios.put(`/comments/${editingCommentId}/`, {\n        text: newCommentText,\n      });\n      setComments((prevComments) =>\n        prevComments.map((comment) =>\n          comment.id === editingCommentId\n            ? { ...comment, text: newCommentText }\n            : comment\n        )\n      );\n      cancelEditing();\n    } catch (err) {\n      console.error(\"Error updating comment:\", err);\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <div className={styles.Title}>{task?.title}</div>\n        <div className={styles.Description}>{task?.description}</div>\n        <hr className={styles.Divider} />\n        <div\n          className={\n            task?.is_overdue ? `${styles.OverdueDate}` : styles.DueDate\n          }\n        >\n          Due Date: {new Date(task?.due_date).toLocaleDateString()}\n          {task?.is_overdue && (\n            <span className={styles.OverdueText}>Overdue</span>\n          )}\n        </div>\n        <div className={styles.ButtonsContainer}>\n          <button\n            onClick={handleEdit}\n            className={`btn btn-warning ${styles.Button}`}\n          >\n            Edit\n          </button>\n          <button\n            onClick={openTaskDeleteModal}\n            className={`btn btn-danger ${styles.Button}`}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      <div className={styles.CommentsSection}>\n        <CommentCreateForm taskId={id} onCommentAdded={handleCommentAdded} />\n        <InfiniteScroll\n          dataLength={comments.length}\n          next={fetchComments}\n          hasMore={hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>No more comments</b>\n            </p>\n          }\n        >\n          {comments.map((comment) => (\n            <div key={comment.id} className={styles.Comment}>\n              <div className={styles.CommentOwner}>{comment.owner}</div>\n              {editingCommentId === comment.id ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    value={newCommentText}\n                    onChange={(e) => setNewCommentText(e.target.value)}\n                    className=\"form-control\"\n                  />\n                  {editError && <div className=\"text-danger\">{editError}</div>}\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={handleCommentUpdate}\n                  >\n                    Save\n                  </button>\n                  <button className=\"btn btn-secondary\" onClick={cancelEditing}>\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <div className={styles.CommentText}>{comment.text}</div>\n                  <div className={styles.CommentDate}>\n                    {new Date(comment.created_at).toLocaleDateString()}\n                  </div>\n                  <div className={styles.CommentButtons}>\n                    <button\n                      className=\"btn btn-warning\"\n                      onClick={() => startEditing(comment)}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => openDeleteModal(comment)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </InfiniteScroll>\n      </div>\n\n      <Modal show={showDeleteModal} onHide={closeDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this comment? Removing a comment is\n          permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDeleteModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleCommentDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showTaskDeleteModal} onHide={closeTaskDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this task? Removing a task is\n          permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeTaskDeleteModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleTaskDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskDetail;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/TaskEdit.module.css\";\n\nconst TaskEdit = () => {\n  const { id } = useParams(); // Retrieve task ID from URL parameters\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Fetch task details on component mount\n    const fetchTask = async () => {\n      try {\n        const { data } = await axios.get(`/tasks/${id}/`);\n        setTitle(data.title);\n        setDescription(data.description);\n\n        // Adjust due date by adding one day for proper display\n        const dueDate = new Date(data.due_date);\n        dueDate.setDate(dueDate.getDate() + 1);\n        setDueDate(dueDate.toISOString().split(\"T\")[0]);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n\n    fetchTask();\n  }, [id]);\n\n  // Handle cancel button click\n  const handleCancel = () => {\n    navigate(\"/tasks\");\n  };\n\n  // Handle save button click\n  const handleSave = async (e) => {\n    e.preventDefault();\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n\n    // Validate form fields\n    const newErrors = {};\n    if (!title.trim())\n      newErrors.title = \"Title is required and cannot be blank.\";\n    if (!description.trim())\n      newErrors.description = \"Description is required and cannot be blank.\";\n    if (!dueDate || dueDate < currentDate)\n      newErrors.dueDate = \"Due Date must be today or later.\";\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      const updatedTask = {\n        title,\n        description,\n        due_date: new Date(dueDate).toISOString(),\n      };\n      // Send updated task data to the server\n      await axios.put(`/tasks/${id}/`, updatedTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\n        \"Error updating task:\",\n        err.response ? err.response.data : err.message\n      );\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>Edit Task</h2>\n        <form onSubmit={handleSave} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.title && <Alert variant=\"danger\">{errors.title}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && (\n              <Alert variant=\"danger\">{errors.description}</Alert>\n            )}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"dueDate\">Due Date:</label>\n            <input\n              type=\"date\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.dueDate && <Alert variant=\"danger\">{errors.dueDate}</Alert>}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button\n              type=\"submit\"\n              className={`btn btn-success ${styles.Button}`}\n            >\n              Save\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className={`btn btn-danger ${styles.Button}`}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskEdit;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Modal, Button } from 'react-bootstrap';\nimport styles from \"../../styles/GroupList.module.css\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst GroupList = () => {\n  const [groups, setGroups] = useState([]);  // State to hold the list of groups\n  const [showModal, setShowModal] = useState(false);  // State to control the visibility of the delete confirmation modal\n  const [groupToDelete, setGroupToDelete] = useState(null);  // State to hold the group to be deleted\n\n  useEffect(() => {\n    // Function to fetch groups from the server\n    const fetchGroups = async () => {\n      try {\n        const { data } = await axiosRes.get(\"/groups/\");\n        const groupsWithTasks = await Promise.all(\n          data.map(async (group) => {\n            const taskRes = await axiosRes.get(`/tasks/${group.task}/`);\n            return { ...group, taskTitle: taskRes.data.title };\n          })\n        );\n        setGroups(groupsWithTasks);  // Update state with the fetched groups\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchGroups();  // Call the fetch function on component mount\n  }, []);\n\n  // Function to handle group deletion\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/groups/${groupToDelete.id}/`);\n      // Remove the deleted group from the state\n      setGroups(groups.filter(group => group.id !== groupToDelete.id));\n      setShowModal(false);  // Close the delete confirmation modal\n    } catch (err) {\n      console.error('Error deleting group:', err);\n    }\n  };\n\n  // Function to open the delete confirmation modal\n  const openModal = (group) => {\n    setGroupToDelete(group);  // Set the group to be deleted\n    setShowModal(true);  // Show the delete confirmation modal\n  };\n\n  // Function to close the delete confirmation modal\n  const closeModal = () => {\n    setShowModal(false);\n    setGroupToDelete(null);  // Clear the group to be deleted\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <div className={styles.ScrollableContent}>\n          <div className={styles.HeaderRow}>\n            <div>Task</div>\n            <div>Group Size</div>\n            <div>View Group</div>\n            <div>Edit Group</div>\n            <div>Delete Group</div>\n          </div>\n          {groups.length > 0 ? (\n            groups.map((group) => (\n              <div key={group.id} className={styles.GroupItem}>\n                <div>{group.taskTitle}</div>\n                <div>{group.group_size}</div>\n                <div>\n                  <Link\n                    to={`/groups/${group.id}`}\n                    className={`btn btn-primary ${styles.GroupButton}`}\n                  >\n                    View\n                  </Link>\n                </div>\n                <div>\n                  <Link\n                    to={`/groups/${group.id}/edit`}\n                    className={`btn btn-warning ${styles.GroupButton}`}\n                  >\n                    Edit\n                  </Link>\n                </div>\n                <div>\n                  <button\n                    className={`btn btn-danger ${styles.GroupButton}`}\n                    onClick={() => openModal(group)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No groups available.</p>\n          )}\n        </div>\n        <div className={styles.CreateButton}>\n          <NavLink to=\"/groups/create\" className=\"btn btn-success\">\n            Create Group\n          </NavLink>\n        </div>\n      </div>\n\n      <Modal show={showModal} onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this group? Removing a group is permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default GroupList;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport styles from '../../styles/GroupCreateForm.module.css';\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nconst GroupCreateForm = () => {\n  const [tasks, setTasks] = useState([]);  // State to hold the list of tasks for the dropdown\n  const [task, setTask] = useState('');  // State to hold the selected task\n  const [groupSize, setGroupSize] = useState('');  // State to hold the group size\n  const [description, setDescription] = useState('');  // State to hold the group description\n  const [errors, setErrors] = useState({});  // State to hold form validation errors\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Function to fetch tasks from the server for the dropdown\n    const fetchTasks = async () => {\n      try {\n        const { data } = await axiosReq.get('/tasks/');\n        setTasks(data);\n      } catch (err) {\n        console.error(\"Error fetching tasks:\", err);\n      }\n    };\n    fetchTasks();  // Call the fetch function on component mount\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate form inputs\n    const newErrors = {};\n    if (!task) newErrors.task = 'Task is required.';\n    if (!groupSize || isNaN(groupSize) || groupSize <= 0) newErrors.groupSize = 'Group size must be a positive number.';\n    if (!description.trim()) newErrors.description = 'Description is required and cannot be blank.';\n\n    // If there are validation errors, set errors state and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      // Create new group object\n      const newGroup = {\n        task,\n        group_size: groupSize,\n        description,\n      };\n      // Send POST request to create new group\n      await axios.post('/groups/', newGroup, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      // Navigate to groups page after successful creation\n      navigate('/groups');\n    } catch (err) {\n      console.error('Error creating group:', err.response ? err.response.data : err.message);\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <h2>Create a New Group</h2>\n        <form onSubmit={handleSubmit} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"task\">Task:</label>\n            <select\n              id=\"task\"\n              value={task}\n              onChange={(e) => setTask(e.target.value)}\n              required\n              className={styles.Input}\n            >\n              <option value=\"\">Select a task</option>\n              {tasks.map((task) => (\n                <option key={task.id} value={task.id}>{task.title}</option>\n              ))}\n            </select>\n            {errors.task && <Alert variant=\"danger\">{errors.task}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"groupSize\">Group Size:</label>\n            <input\n              type=\"number\"\n              id=\"groupSize\"\n              value={groupSize}\n              onChange={(e) => setGroupSize(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.groupSize && <Alert variant=\"danger\">{errors.groupSize}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && <Alert variant=\"danger\">{errors.description}</Alert>}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button type=\"submit\" className={`btn btn-success ${styles.Button}`}>\n              Create Group\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupCreateForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport styles from \"../../styles/GroupDetail.module.css\";\n\nconst GroupDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [group, setGroup] = useState(null);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  // Fetch group details on component mount\n  useEffect(() => {\n    const fetchGroup = async () => {\n      try {\n        const { data } = await axios.get(`/groups/${id}/`);\n        setGroup(data);\n        \n        // Fetch the task title\n        const taskRes = await axios.get(`/tasks/${data.task}/`);\n        setTaskTitle(taskRes.data.title);\n      } catch (err) {\n        console.error(\"Error fetching group:\", err);\n      }\n    };\n\n    fetchGroup();\n  }, [id]);\n\n  // Open the group delete confirmation modal\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  // Close the group delete confirmation modal\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  // Handle group deletion\n  const handleGroupDelete = async () => {\n    try {\n      await axios.delete(`/groups/${id}/`);\n      navigate(\"/groups\");\n    } catch (err) {\n      console.error(\"Error deleting group:\", err);\n    }\n  };\n\n  // Navigate to the group edit page\n  const handleEdit = () => {\n    navigate(`/groups/${id}/edit`);\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        {group && (\n          <>\n            <div className={styles.TaskTitle}>\n              Task: {taskTitle}\n            </div>\n            <hr className={styles.Divider} />\n            <div className={styles.GroupSize}>\n              Group Size: {group.group_size}\n            </div>\n            <div className={styles.Description}>\n              Description: {group.description}\n            </div>\n            <div className={styles.ButtonsContainer}>\n              <button\n                onClick={handleEdit}\n                className={`btn btn-warning ${styles.Button}`}\n              >\n                Edit\n              </button>\n              <button\n                onClick={openDeleteModal}\n                className={`btn btn-danger ${styles.Button}`}\n              >\n                Delete\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n\n      <Modal show={showDeleteModal} onHide={closeDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this group? Removing a group is permanent.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDeleteModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleGroupDelete}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default GroupDetail;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/GroupEdit.module.css\";\n\nconst GroupEdit = () => {\n  const { id } = useParams(); // Retrieve group ID from URL parameters\n  const navigate = useNavigate();\n  const [description, setDescription] = useState(\"\");\n  const [groupSize, setGroupSize] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Fetch group details on component mount\n    const fetchGroup = async () => {\n      try {\n        const { data } = await axios.get(`/groups/${id}/`);\n        setDescription(data.description);\n        setGroupSize(data.group_size);\n        setTask(data.task);\n      } catch (err) {\n        console.error(\"Error fetching group:\", err);\n      }\n    };\n\n    // Fetch tasks for the dropdown\n    const fetchTasks = async () => {\n      try {\n        const { data } = await axios.get(\"/tasks/\");\n        setTasks(data);\n      } catch (err) {\n        console.error(\"Error fetching tasks:\", err);\n      }\n    };\n\n    fetchGroup();\n    fetchTasks();\n  }, [id]);\n\n  // Handle cancel button click\n  const handleCancel = () => {\n    navigate(\"/groups\");\n  };\n\n  // Handle save button click\n  const handleSave = async (e) => {\n    e.preventDefault();\n\n    // Validate form fields\n    const newErrors = {};\n    if (!description.trim())\n      newErrors.description = \"Description is required and cannot be blank.\";\n    if (!groupSize || groupSize <= 0)\n      newErrors.groupSize = \"Group size must be a positive number.\";\n    if (!task)\n      newErrors.task = \"A task must be selected.\";\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    try {\n      const updatedGroup = {\n        description,\n        group_size: groupSize,\n        task,\n      };\n      // Send updated group data to the server\n      await axios.put(`/groups/${id}/`, updatedGroup, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      navigate(\"/groups\");\n    } catch (err) {\n      console.error(\n        \"Error updating group:\",\n        err.response ? err.response.data : err.message\n      );\n    }\n  };\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.TextBox}>\n        <form onSubmit={handleSave} className={styles.Form}>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"task\">Task:</label>\n            <select\n              id=\"task\"\n              value={task}\n              onChange={(e) => setTask(e.target.value)}\n              required\n              className={styles.Input}\n            >\n              <option value=\"\">Select a task</option>\n              {tasks.map((task) => (\n                <option key={task.id} value={task.id}>\n                  {task.title}\n                </option>\n              ))}\n            </select>\n            {errors.task && <Alert variant=\"danger\">{errors.task}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"groupSize\">Group Size:</label>\n            <input\n              type=\"number\"\n              id=\"groupSize\"\n              value={groupSize}\n              onChange={(e) => setGroupSize(e.target.value)}\n              required\n              className={styles.Input}\n            />\n            {errors.groupSize && <Alert variant=\"danger\">{errors.groupSize}</Alert>}\n          </div>\n          <div className={styles.FormGroup}>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              className={styles.Textarea}\n            />\n            {errors.description && (\n              <Alert variant=\"danger\">{errors.description}</Alert>\n            )}\n          </div>\n          <div className={styles.ButtonGroup}>\n            <button\n              type=\"submit\"\n              className={`btn btn-success ${styles.Button}`}\n            >\n              Save\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className={`btn btn-danger ${styles.Button}`}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupEdit;\n","import React from \"react\";\nimport styles from \"../styles/Footer.module.css\";\n\n// Footer component definition\nconst Footer = () => {\n  return (\n    <footer className={styles.Footer}>\n      <h3 className={styles.Title}>Contact Planbrella &copy;</h3>\n      <p className={styles.Paragraph}>Phone Number: 08-123 45 67</p>\n      <p className={styles.Paragraph}>E-mail: admin@planbrella.com</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst useMenuState = () => {\n  // State to manage the menu open/close state\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // Hook to get the current location object\n  const location = useLocation();\n\n  // Hook to get the current user from the context\n  const currentUser = useCurrentUser();\n\n  // State to manage the padding top based on menu and user state\n  const [paddingTop, setPaddingTop] = useState(\"120px\");\n\n  // Effect to close the menu whenever the location changes\n  useEffect(() => {\n    setMenuOpen(false);\n  }, [location]);\n\n  // Effect to adjust the padding top based on the menu state and user state\n  useEffect(() => {\n    if (currentUser) {\n      setPaddingTop(menuOpen ? \"180px\" : \"120px\");\n    } else {\n      setPaddingTop(menuOpen ? \"140px\" : \"120px\");\n    }\n  }, [currentUser, menuOpen]);\n\n  // Return the state and function to manage the menu and padding top\n  return { menuOpen, setMenuOpen, paddingTop };\n};\n\nexport default useMenuState;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./pages/home/Home\";\nimport SignInForm from \"./pages/auth/SignInForm\";\nimport SignUpForm from \"./pages/auth/SignUpForm\";\nimport Tasks from \"./pages/tasks/Tasks\";\nimport TaskCreateForm from \"./pages/tasks/TaskCreateForm\";\nimport TaskDetail from \"./pages/tasks/TaskDetail\";\nimport TaskEdit from \"./pages/tasks/TaskEdit\";\nimport GroupList from \"./pages/groups/GroupList\";\nimport GroupCreateForm from \"./pages/groups/GroupCreateForm\";\nimport GroupDetail from \"./pages/groups/GroupDetail\";\nimport GroupEdit from \"./pages/groups/GroupEdit\";\nimport Footer from \"./components/Footer\";\nimport styles from \"./App.module.css\";\nimport useMenuState from \"./hooks/useMenuState\";\nimport \"./api/axiosDefaults\";\n\nfunction App() {\n  const { menuOpen, setMenuOpen, paddingTop } = useMenuState(); // Custom hook to manage menu state\n\n  return (\n    <div\n      className={classNames(styles.App, { [styles.contentShift]: menuOpen })}\n    >\n      <NavBar onToggle={(isOpen) => setMenuOpen(isOpen)} /> {/* Navbar component with toggle handler */}\n      <div className={styles.content} style={{ paddingTop, flex: 1 }}> {/* Main content area with dynamic padding */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} /> {/* Home page route */}\n          <Route path=\"/sign-in\" element={<SignInForm />} /> {/* Sign-in form route */}\n          <Route path=\"/sign-up\" element={<SignUpForm />} /> {/* Sign-up form route */}\n          <Route path=\"/tasks\" element={<Tasks />} /> {/* Tasks list route */}\n          <Route path=\"/tasks/create\" element={<TaskCreateForm />} /> {/* Task creation form route */}\n          <Route path=\"/tasks/:id\" element={<TaskDetail />} /> {/* Task detail view route */}\n          <Route path=\"/tasks/:id/edit\" element={<TaskEdit />} /> {/* Task edit form route */}\n          <Route path=\"/groups\" element={<GroupList />} /> {/* Groups list route */}\n          <Route path=\"/groups/create\" element={<GroupCreateForm />} /> {/* Group creation form route */}\n          <Route path=\"/groups/:id\" element={<GroupDetail />} /> {/* Group detail view route */}\n          <Route path=\"/groups/:id/edit\" element={<GroupEdit />} /> {/* Group edit form route */}\n          <Route path=\"*\" element={<p>Page not found!</p>} /> {/* Fallback route for undefined paths */}\n        </Routes>\n      </div>\n      <Footer /> {/* Footer component */}\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CurrentUserProvider } from \"./contexts/CurrentUserContext\";\n\n\nReactDOM.render(\n  <Router>\n        <CurrentUserProvider>\n          <App />\n      </CurrentUserProvider>\n    </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}